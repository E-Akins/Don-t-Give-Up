<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>flash = false
menu = false
cursor = 0

//volume variables; 1 = 100%
global.music_volume = 1
global.sfx_volume = 1

menutype = "main"
/*menu tpyes:
main
controls
highscores
options
*/

menu0 = c_black
menu1 = c_black
menu2 = c_black
menu3 = c_black
menu4 = c_black

//default highscores
highscore_clear()
highscore_add("TEM",10)
highscore_add("PER",9)
highscore_add("ARP",8)
highscore_add("MGK",7)
highscore_add("AAA",6)
highscore_add("CAP",5)
highscore_add("KEY",4)
highscore_add("POP",3)
highscore_add("JFK",2)
highscore_add("IRS",1)


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>flash = !flash

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (alarm[0] == -1 &amp;&amp; menu = false) alarm[0] = 5

if (menu &amp;&amp; !instance_exists(obj_fade))
{
    if menutype = "main" || menutype = "options"
    {
    cursor += max(keyboard_check_pressed(vk_down),0)
    cursor -= max(keyboard_check_pressed(vk_up),0)
    if menutype = "main"
        cursor = scr_clamp_w_loop(cursor,0,4)
    if menutype = "options"
        cursor = scr_clamp_w_loop(cursor,0,3)
    }
    
    menu0 = c_black
    menu1 = c_black
    menu2 = c_black
    menu3 = c_black
    menu4 = c_black
    
    switch (cursor)
    {
        case 0:
            menu0 = c_blue
            break
        case 1:
            menu1 = c_blue
            break            
        case 2:
            menu2 = c_blue
            break        
        case 3:
            menu3 = c_blue
            break        
        case 4:
            menu4 = c_blue
            break        
    }
    
    if (keyboard_check_pressed(vk_enter))
    {
        switch (menutype) 
        {
            //Controls Menu
            case "controls":
            {
                //Go back to the main menu
                menutype = "main"
                cursor = 0
                break
            }
            
            //Display Highscores
            case "highscores":
            {
                //Go back to the main menu
                menutype = "main"
                cursor = 0
                break
            }
            
            //Options Menu
            case "options":
            {
                switch(cursor)
                {
                    //Full Screen
                    case 0:
                        if window_get_fullscreen()
                            window_set_fullscreen(false)
                        else
                            window_set_fullscreen(true)
                            
                        break
                        
                    //Music Volume
                    case 1:
                        global.music_volume += 0.1
                        global.music_volume = scr_clamp_w_loop(global.music_volume,0,1)
                        break
                        
                    //Sfx Volume
                    case 2:
                        global.sfx_volume += 0.1
                        global.sfx_volume = scr_clamp_w_loop(global.sfx_volume,0,1)
                        break
                    
                    //Main Menu
                    case 3:
                        menutype = "main"
                        cursor = 0
                }
                break
            }
            
            
            //Main Menu
            case "main":
            {
                switch (cursor)
                {
                    // Play the Game
                    case 0:
                        inst = instance_create(0,0,obj_fade)
                        inst.destination = rm_game
                        break
                    
                    // Show the Controls
                    case 1:
                        menutype = "controls"
                        cursor = 2
                        break
                    
                    // Show the highscores
                    case 2:
                        menutype = "highscores"
                        cursor = 0
                        break
                    
                    // Show the options
                    case 3:
                        menutype = "options"
                        cursor = 0
                        break
                    
                    // Exit the Game
                    case 4:
                        game_end()
                        break
                    }
            }
        }
    }
}
if (keyboard_check_pressed(vk_enter) &amp;&amp; !menu)
{
    menu = true
    flash = false
    alarm[0] = -1
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_set_font(ft_title)
draw_set_color(c_black)
draw_set_halign(fa_center)
draw_set_valign(fa_middle)

// Button
//draw_sprite(spr_button,0,display_get_gui_width()/2,display_get_gui_height()/3)

//title
if (menutype != "highscores") draw_text(display_get_gui_width()/2,display_get_gui_height()/3,"Sprout Dash")


var ht = string_height("Don't Give Up!")
    
if (flash)
{
    draw_set_font(ft_start_menu)
    draw_text(display_get_gui_width()/2,display_get_gui_height()/3+ht,"Press Enter to Play")
}

//draw main menu
if (menu &amp;&amp; !instance_exists(obj_fade) &amp;&amp; menutype = "main")
{
    draw_set_font(ft_start_menu)
        
    draw_text_colour(display_get_gui_width()/2,display_get_gui_height()/3+ht,"Play",menu0,menu0,menu0,menu0,1)
    ht += string_height("Play")
    draw_text_colour(display_get_gui_width()/2,display_get_gui_height()/3+ht,"Controls",menu1,menu1,menu1,menu1,1)
    ht += string_height("Controls")
    draw_text_colour(display_get_gui_width()/2,display_get_gui_height()/3+ht,"Highscores",menu2,menu2,menu2,menu2,1)
    ht += string_height("Highscores")
    draw_text_colour(display_get_gui_width()/2,display_get_gui_height()/3+ht,"Options",menu3,menu3,menu3,menu3,1)
    ht += string_height("Options")
    draw_text_colour(display_get_gui_width()/2,display_get_gui_height()/3+ht,"Exit",menu4,menu4,menu4,menu4,1)
}

//draw controls menu
if (menu &amp;&amp; !instance_exists(obj_fade) &amp;&amp; menutype = "controls")
{
    draw_set_font(ft_start_menu)
    draw_text_colour(display_get_gui_width()/2,display_get_gui_height()/3+ht,"WASD: Movement",menu0,menu0,menu0,menu0,1)
    ht += string_height("WASD: Movement")
    draw_text_colour(display_get_gui_width()/2,display_get_gui_height()/3+ht,"J: Rain",menu1,menu1,menu1,menu1,1)
    ht += string_height("J: Rain")
    draw_text_colour(display_get_gui_width()/2,display_get_gui_height()/3+ht,"Main Menu",menu2,menu2,menu2,menu2,1)
    ht += string_height("Main Menu")
}

//draw options menu
if (menu &amp;&amp; !instance_exists(obj_fade) &amp;&amp; menutype = "options")
{
    draw_set_font(ft_start_menu)
    
    if window_get_fullscreen()
    {
        draw_text_colour(display_get_gui_width()/2,display_get_gui_height()/3+ht,"Full Screen: Windowed",menu0,menu0,menu0,menu0,1)
        ht += string_height("Full Screen: Windowed")
    }
    else{
        draw_text_colour(display_get_gui_width()/2,display_get_gui_height()/3+ht,"Full Screen: Full Screen",menu0,menu0,menu0,menu0,1)
        ht += string_height("Full Screen: Full Screen")
    }
    draw_text_colour(display_get_gui_width()/2,display_get_gui_height()/3+ht,"Music Volume: " + string_format(global.music_volume * 100,1,0),menu1,menu1,menu1,menu1,1)
    ht += string_height("Music Volume: ")
    draw_text_colour(display_get_gui_width()/2,display_get_gui_height()/3+ht,"Sfx Volume: "+ string_format(global.sfx_volume * 100,1,0),menu2,menu2,menu2,menu2,1)
    ht += string_height("Sfx Volume: ")
    draw_text_colour(display_get_gui_width()/2,display_get_gui_height()/3+ht,"Main Menu",menu3,menu3,menu3,menu3,1)
    ht += string_height("Main Menu")
}

//draw highscores
if (menu &amp;&amp; !instance_exists(obj_fade) &amp;&amp; menutype = "highscores")
{
    draw_highscore(10+string_width("AAA"),10+string_height("AAA"),display_get_gui_width(),display_get_gui_height()/3*2)
    
    draw_set_font(ft_start_menu)
    draw_text_colour(display_get_gui_width()/2,display_get_gui_height()/3*2+ht,"Main Menu",menu0,menu0,menu0,menu0,1)
    ht += string_height("Main Menu")
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
